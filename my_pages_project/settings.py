"""
Django settings for my_pages_project project.

Generated by 'django-admin startproject' using Django 3.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os


import logging

# The default Django logging is found in
#   ~/.local/share/virtualenvs/DFB38_03_mypages_app-QSessIPs/
#     ... lib/python3.8/site-packages/django/utils/log.py


_LOGGING_PATH = "/tmp/dfb38_03_mypages_app.log"

LOGGING = {
	#'faked_by_ANR': True,#marker I added so it's easy to see this config dict
    'version': 1,
    'disable_existing_loggers': False,

	"formatters": {
		"console": {
			'format': '%(name)-12s %(levelname)-8s %(message)s'
			},
        'file': {
            'format': '%(asctime)s %(name)-25s %(levelname)-8s %(message)s'
        	}
    	},

    "handlers": {
        'my_console_handler': {
            'class': 'logging.StreamHandler',
            "formatter": "console",
            'level': 'DEBUG',
        	},
        "my_log_file": {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'formatter': 'file',
            'filename': _LOGGING_PATH,
        	}
    	},
    "root": {
        'handlers': ['my_console_handler', "my_log_file"],
        'level': 'DEBUG',
    	},
	}


print("my_pages_project/settings.py@54: LOG PATH: %s" % (_LOGGING_PATH,))

logger = logging.getLogger(__name__)
#logger.setLevel(logging.DEBUG)

if True:
	import inspect
	lnum = inspect.currentframe().f_lineno
	logger.error("This is ERROR in  settings.py @ %s", lnum); lnum += 1
	logger.warning("This is WARNING in settings.py @ %s", lnum); lnum += 1
	logger.info("This is INFO in settings.py @ %s", lnum); lnum += 1
	logger.debug("This is DEBUG in settings.py @ %s", lnum); lnum += 1


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

logger.info(f"BASE_DIR is {BASE_DIR}")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '#td49a4l8x)7gby-9arimvj^29f%&c3m0$0sw7z334q5*6d#+j'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
	"my_pages_app.apps.MyPagesAppConfig",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'my_pages_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates"),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'my_pages_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'



## end ###
